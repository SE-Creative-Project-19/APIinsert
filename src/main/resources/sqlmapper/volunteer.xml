<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.VolunteerMapper">
    <resultMap id="volunteerResultMap" type="persistence.dto.VolunteerDTO">
        <id property="volunteerPK" column="VolunteerPK" />
        <result property="processingResult" column="ProcessingResult" />
        <result property="serviceInfoPK" column="ServiceInfo_ServiceInfoPK" />
        <result property="userPK" column="User_UserPK" />
    </resultMap>

    <select id="getVolunteerService" resultType="java.util.Map">
        SELECT
            u.Name AS 신청자명,
            s.progrmSj AS 봉사제목,
            s.mnnstNm AS 기관명,
            s.nanmmbyNm AS 주소,
            s.nanmmbyNmAdmn AS 담당자명,
            s.actPlace AS 봉사장소,
            v.processingResult AS 신청상태
        FROM
            serviceinfo AS s
                INNER JOIN volunteer AS v ON s.ServiceInfoPK = v.ServiceInfo_ServiceInfoPK
                INNER JOIN user AS u ON u.UserPK = v.User_UserPK
        WHERE
            u.ID = #{id} AND v.ProcessingResult in ('신청', '취소', '승인', '거절')
    </select> <!-- 봉사 신청 조회 -->

    <select id="getVolunteerServiceHistory" resultType="java.util.Map">
        SELECT
            u.Name AS 신청자명,
            s.progrmSj AS 봉사제목,
            s.mnnstNm AS 기관명,
            s.nanmmbyNm AS 주소,
            s.nanmmbyNmAdmn AS 담당자명,
            s.actPlace AS 봉사장소,
            v.processingResult AS 신청상태
        FROM
            serviceinfo AS s
                INNER JOIN volunteer AS v ON s.ServiceInfoPK = v.ServiceInfo_ServiceInfoPK
                INNER JOIN user AS u ON u.UserPK = v.User_UserPK
        WHERE
            u.ID = #{id} AND v.ProcessingResult in ('별점 미등록', '봉사 완료')
    </select> <!-- 봉사 내역 조회 -->

    <select id="getVolunteerApplicant" resultMap="volunteerResultMap">
        <!-- 기관 명을 바탕으로 serviceInfo 테이블을 조인한 후 volunteer 테이블과 비교하여 같은 infoPk를 가진 row를 select* -->
        SELECT *
        FROM serviceinfo si
        JOIN volunteer v ON si.serviceInfoPK = v.ServiceInfo_ServiceInfoPK
        WHERE v.processingResult = '신청'
        AND si.mnnstNm = #{facility}
    </select>

    <select id="getVolunteerDone" resultMap="volunteerResultMap">
        <!--기관 명을 바탕으로 serviceInfo 테이블을 조인한 후 volunteer  테이블과 비교하여 같은 infoPk를 가진 row를 select* 단 처리상태가 별점 미등록인  것들만-->
        SELECT *
        FROM serviceinfo si
        JOIN volunteer v ON si.serviceInfoPK = v.ServiceInfo_ServiceInfoPK
        WHERE v.processingResult = '별점 미등록'
        AND si.mnnstNm = #{facility}
    </select>

    <update id="updateVolunteer">
        UPDATE volunteer
        <set>
            <if test="volunteerDTO.processingResult != null">
                processingResult = #{volunteerDTO.processingResult},
            </if>
            <if test="volunteerDTO.serviceInfoPK != 0">
                ServiceInfo_ServiceInfoPK = #{volunteerDTO.serviceInfoPK},
            </if>
            <if test="volunteerDTO.userPK != 0">
                User_UserPK = #{volunteerDTO.userPK},
            </if>
        </set>
        WHERE volunteerPK = #{volunteerDTO.volunteerPK}
    </update>

    <update id="updateVolunteerByTime">
        UPDATE volunteer
        SET processingResult = '별점 미등록'
        WHERE EXISTS (
                      SELECT *
                      FROM serviceinfo
                      WHERE serviceinfo.serviceInfoPK = volunteer.ServiceInfo_ServiceInfoPK
                        AND serviceinfo.progrmEndde &lt; #{currentDate}
                  )
    </update>

    <select id="countVolunteerByUserPKAndServiceInfoPK" parameterType="persistence.dto.VolunteerDTO" resultType="int">
        SELECT COUNT(*) FROM volunteer
        WHERE User_UserPK = #{User_UserPK} AND ServiceInfo_ServiceInfoPK = #{ServiceInfo_ServiceInfoPK}
    </select> <!-- 봉사 중복 신청 확인 -->

    <insert id="insertVolunteer" parameterType="persistence.dto.VolunteerDTO">
        <selectKey keyProperty="volunteerPK" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO volunteer (volunteerPK, processingResult, ServiceInfo_ServiceInfoPK, User_UserPK)
        VALUES (#{volunteerPK}, '신청', #{ServiceInfo_ServiceInfoPK}, #{User_UserPK})
    </insert> <!-- 봉사 신청 -->





</mapper>
